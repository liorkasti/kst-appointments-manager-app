{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when server call is needed\n// async function removeAppointmentUser(appointment: Appointment): Promise<void> {\n//   const patchData = [{ op: 'remove', path: '/userId' }];\n//   await axiosInstance.patch(`/appointment/${appointment.id}`, {\n//     data: patchData,\n//   });\n// }\n\n// TODO: update return type\nexport function useCancelAppointment() {\n  _s();\n  const toast = useCustomToast();\n\n  // TODO: replace with mutate function\n  return appointment => {\n    // nothing to see here\n  };\n}\n_s(useCancelAppointment, \"WLzb0O94OqAgIIC/eBM2nWut5JM=\", false, function () {\n  return [useCustomToast];\n});","map":{"version":3,"names":["useCustomToast","useCancelAppointment","_s","toast","appointment"],"sources":["C:/Users/kasti/workspace/REACT-QUERY/base-lazy-days/client/src/components/appointments/hooks/useCancelAppointment.ts"],"sourcesContent":["import { Appointment } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\r\n\r\n// for when server call is needed\r\n// async function removeAppointmentUser(appointment: Appointment): Promise<void> {\r\n//   const patchData = [{ op: 'remove', path: '/userId' }];\r\n//   await axiosInstance.patch(`/appointment/${appointment.id}`, {\r\n//     data: patchData,\r\n//   });\r\n// }\r\n\r\n// TODO: update return type\r\nexport function useCancelAppointment(): (appointment: Appointment) => void {\r\n  const toast = useCustomToast();\r\n\r\n  // TODO: replace with mutate function\r\n  return (appointment: Appointment) => {\r\n    // nothing to see here\r\n  };\r\n}\r\n"],"mappings":";AAGA,SAASA,cAAc,QAAQ,gCAAgC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,SAASC,oBAAoBA,CAAA,EAAuC;EAAAC,EAAA;EACzE,MAAMC,KAAK,GAAGH,cAAc,EAAE;;EAE9B;EACA,OAAQI,WAAwB,IAAK;IACnC;EAAA,CACD;AACH;AAACF,EAAA,CAPeD,oBAAoB;EAAA,QACpBD,cAAc;AAAA"},"metadata":{},"sourceType":"module"}