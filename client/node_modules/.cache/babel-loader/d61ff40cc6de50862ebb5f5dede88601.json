{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuery, useQueryClient } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\n\n// for when we need a query function for useQuery\nasync function getTreatments() {\n  const {\n    data\n  } = await axiosInstance.get('/treatments');\n  return data;\n}\nexport function useTreatments() {\n  _s();\n  const fallback = [];\n  const {\n    data = fallback\n  } = useQuery(queryKeys.treatments, getTreatments, {\n    staleTime: 6000,\n    // 10 minutes\n    cacheTime: 90000 // 15 minutess\n  });\n\n  return data;\n}\n_s(useTreatments, \"Dt1zu2A8Sa6608pid1m3JMfgG5k=\", false, function () {\n  return [useQuery];\n});\nexport function usePrefetchTreatments() {\n  _s2();\n  const queryClient = useQueryClient();\n  queryClient.prefetchQuery(queryKeys.treatments, getTreatments);\n}\n_s2(usePrefetchTreatments, \"4R+oYVB2Uc11P7bp1KcuhpkfaTw=\", false, function () {\n  return [useQueryClient];\n});","map":{"version":3,"names":["useQuery","useQueryClient","axiosInstance","queryKeys","getTreatments","data","get","useTreatments","_s","fallback","treatments","staleTime","cacheTime","usePrefetchTreatments","_s2","queryClient","prefetchQuery"],"sources":["/Users/liorkastenbaum/Repos/kst-appointments-manager-app/client/src/components/treatments/hooks/useTreatments.ts"],"sourcesContent":["import { useQuery, useQueryClient } from 'react-query';\n\nimport type { Treatment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\n\n// for when we need a query function for useQuery\nasync function getTreatments(): Promise<Treatment[]> {\n  const { data } = await axiosInstance.get('/treatments');\n  return data;\n}\n\nexport function useTreatments(): Treatment[] {\n  const fallback = [];\n  const { data = fallback } = useQuery(queryKeys.treatments, getTreatments, {\n    staleTime: 6000, // 10 minutes\n    cacheTime: 90000, // 15 minutess\n  });\n  return data;\n}\n\nexport function usePrefetchTreatments(): void {\n  const queryClient = useQueryClient();\n  queryClient.prefetchQuery(queryKeys.treatments, getTreatments);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,aAAa;AAGtD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;;AAE1D;AACA,eAAeC,aAAaA,CAAA,EAAyB;EACnD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,aAAa,CAAC;EACvD,OAAOD,IAAI;AACb;AAEA,OAAO,SAASE,aAAaA,CAAA,EAAgB;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAEJ,IAAI,GAAGI;EAAS,CAAC,GAAGT,QAAQ,CAACG,SAAS,CAACO,UAAU,EAAEN,aAAa,EAAE;IACxEO,SAAS,EAAE,IAAI;IAAE;IACjBC,SAAS,EAAE,KAAK,CAAE;EACpB,CAAC,CAAC;;EACF,OAAOP,IAAI;AACb;AAACG,EAAA,CAPeD,aAAa;EAAA,QAECP,QAAQ;AAAA;AAOtC,OAAO,SAASa,qBAAqBA,CAAA,EAAS;EAAAC,GAAA;EAC5C,MAAMC,WAAW,GAAGd,cAAc,CAAC,CAAC;EACpCc,WAAW,CAACC,aAAa,CAACb,SAAS,CAACO,UAAU,EAAEN,aAAa,CAAC;AAChE;AAACU,GAAA,CAHeD,qBAAqB;EAAA,QACfZ,cAAc;AAAA"},"metadata":{},"sourceType":"module"}