{"ast":null,"code":"var _s = $RefreshSig$();\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { useUser } from './useUser';\nimport { useQuery } from 'react-query';\n\n// for when we need a query function for useQuery\nasync function getUserAppointments(user) {\n  if (!user) return null;\n  const {\n    data\n  } = await axiosInstance.get(`/user/${user.id}/appointments`, {\n    headers: getJWTHeader(user)\n  });\n  return data.appointments;\n}\nexport function useUserAppointments() {\n  _s();\n  const {\n    user\n  } = useUser();\n  const fallback = [];\n  const {\n    data: userAppointments\n  } = useQuery('user-appointments', () => getUserAppointments(user), {\n    enabled: !!user\n  });\n  return userAppointments;\n}\n_s(useUserAppointments, \"+p+AdWET86L4Tkg+JYu2eidw7Hc=\", false, function () {\n  return [useUser, useQuery];\n});","map":{"version":3,"names":["axiosInstance","getJWTHeader","useUser","useQuery","getUserAppointments","user","data","get","id","headers","appointments","useUserAppointments","_s","fallback","userAppointments","enabled"],"sources":["/Users/liorkastenbaum/Repos/kst-appointments-manager-app/client/src/components/user/hooks/useUserAppointments.ts"],"sourcesContent":["import dayjs from 'dayjs';\n\nimport type { Appointment, User } from '../../../../../shared/types';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useUser } from './useUser';\nimport { useQueries, useQuery } from 'react-query';\n\n// for when we need a query function for useQuery\nasync function getUserAppointments(\n  user: User | null,\n): Promise<Appointment[] | null> {\n  if (!user) return null;\n  const { data } = await axiosInstance.get(`/user/${user.id}/appointments`, {\n    headers: getJWTHeader(user),\n  });\n  return data.appointments;\n}\n\nexport function useUserAppointments(): Appointment[] {\n  const { user } = useUser();\n  const fallback: Appointment[] = [];\n  const { data: userAppointments } = useQuery(\n    'user-appointments',\n    () => getUserAppointments(user),\n    { enabled: !!user },\n  );\n\n  return userAppointments;\n}\n"],"mappings":";AAGA,SAASA,aAAa,EAAEC,YAAY,QAAQ,wBAAwB;AAEpE,SAASC,OAAO,QAAQ,WAAW;AACnC,SAAqBC,QAAQ,QAAQ,aAAa;;AAElD;AACA,eAAeC,mBAAmBA,CAChCC,IAAiB,EACc;EAC/B,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;EACtB,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMN,aAAa,CAACO,GAAG,CAAE,SAAQF,IAAI,CAACG,EAAG,eAAc,EAAE;IACxEC,OAAO,EAAER,YAAY,CAACI,IAAI;EAC5B,CAAC,CAAC;EACF,OAAOC,IAAI,CAACI,YAAY;AAC1B;AAEA,OAAO,SAASC,mBAAmBA,CAAA,EAAkB;EAAAC,EAAA;EACnD,MAAM;IAAEP;EAAK,CAAC,GAAGH,OAAO,CAAC,CAAC;EAC1B,MAAMW,QAAuB,GAAG,EAAE;EAClC,MAAM;IAAEP,IAAI,EAAEQ;EAAiB,CAAC,GAAGX,QAAQ,CACzC,mBAAmB,EACnB,MAAMC,mBAAmB,CAACC,IAAI,CAAC,EAC/B;IAAEU,OAAO,EAAE,CAAC,CAACV;EAAK,CACpB,CAAC;EAED,OAAOS,gBAAgB;AACzB;AAACF,EAAA,CAVeD,mBAAmB;EAAA,QAChBT,OAAO,EAEWC,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}