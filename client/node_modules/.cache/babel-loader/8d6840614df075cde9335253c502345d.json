{"ast":null,"code":"// for when we need a query function for useQuery\n// async function getTreatments(): Promise<Treatment[]> {\n//   const { data } = await axiosInstance.get('/treatments');\n//   return data;\n// }\n\nexport function useTreatments() {\n  // TODO: get data from server via useQuery\n  return [];\n}","map":{"version":3,"names":["useTreatments"],"sources":["C:/Users/kasti/workspace/REACT-QUERY/base-lazy-days/client/src/components/treatments/hooks/useTreatments.ts"],"sourcesContent":["import type { Treatment } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\r\n\r\n// for when we need a query function for useQuery\r\n// async function getTreatments(): Promise<Treatment[]> {\r\n//   const { data } = await axiosInstance.get('/treatments');\r\n//   return data;\r\n// }\r\n\r\nexport function useTreatments(): Treatment[] {\r\n  // TODO: get data from server via useQuery\r\n  return [];\r\n}\r\n"],"mappings":"AAKA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASA,aAAaA,CAAA,EAAgB;EAC3C;EACA,OAAO,EAAE;AACX"},"metadata":{},"sourceType":"module"}