{"ast":null,"code":"// async function getUser(user: User | null): Promise<User | null> {\n//   if (!user) return null;\n//   const { data }: AxiosResponse<{ user: User }> = await axiosInstance.get(\n//     `/user/${user.id}`,\n//     {\n//       headers: getJWTHeader(user),\n//     },\n//   );\n//   return data.user;\n// }\n\nexport function useUser() {\n  // TODO: call useQuery to update user data from server\n  const user = null;\n\n  // meant to be called from useAuth\n  function updateUser(newUser) {\n    // TODO: update the user in the query cache\n  }\n\n  // meant to be called from useAuth\n  function clearUser() {\n    // TODO: reset user to null in query cache\n  }\n  return {\n    user,\n    updateUser,\n    clearUser\n  };\n}","map":{"version":3,"names":["useUser","user","updateUser","newUser","clearUser"],"sources":["C:/Users/kasti/workspace/REACT-QUERY/base-lazy-days/client/src/components/user/hooks/useUser.ts"],"sourcesContent":["import { AxiosResponse } from 'axios';\r\n\r\nimport type { User } from '../../../../../shared/types';\r\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport {\r\n  clearStoredUser,\r\n  getStoredUser,\r\n  setStoredUser,\r\n} from '../../../user-storage';\r\n\r\n// async function getUser(user: User | null): Promise<User | null> {\r\n//   if (!user) return null;\r\n//   const { data }: AxiosResponse<{ user: User }> = await axiosInstance.get(\r\n//     `/user/${user.id}`,\r\n//     {\r\n//       headers: getJWTHeader(user),\r\n//     },\r\n//   );\r\n//   return data.user;\r\n// }\r\n\r\ninterface UseUser {\r\n  user: User | null;\r\n  updateUser: (user: User) => void;\r\n  clearUser: () => void;\r\n}\r\n\r\nexport function useUser(): UseUser {\r\n  // TODO: call useQuery to update user data from server\r\n  const user = null;\r\n\r\n  // meant to be called from useAuth\r\n  function updateUser(newUser: User): void {\r\n    // TODO: update the user in the query cache\r\n  }\r\n\r\n  // meant to be called from useAuth\r\n  function clearUser() {\r\n    // TODO: reset user to null in query cache\r\n  }\r\n\r\n  return { user, updateUser, clearUser };\r\n}\r\n"],"mappings":"AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,OAAO,SAASA,OAAOA,CAAA,EAAY;EACjC;EACA,MAAMC,IAAI,GAAG,IAAI;;EAEjB;EACA,SAASC,UAAUA,CAACC,OAAa,EAAQ;IACvC;EAAA;;EAGF;EACA,SAASC,SAASA,CAAA,EAAG;IACnB;EAAA;EAGF,OAAO;IAAEH,IAAI;IAAEC,UAAU;IAAEE;EAAU,CAAC;AACxC"},"metadata":{},"sourceType":"module"}