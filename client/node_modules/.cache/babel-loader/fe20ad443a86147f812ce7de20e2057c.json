{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\n// for when we need a query function for useQuery\nasync function getStaff() {\n  const {\n    data\n  } = await axiosInstance.get('/staff');\n  return data;\n}\nexport function useStaff() {\n  _s();\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n  const fallback = [];\n  const {\n    staff = data = fallback\n  } = useQuery(queryKeys.staff, getStaff);\n  return {\n    staff,\n    filter,\n    setFilter\n  };\n}\n_s(useStaff, \"+Efybv6eTNsrb02SVoDceoKy6lM=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useState","useQuery","axiosInstance","queryKeys","getStaff","data","get","useStaff","_s","filter","setFilter","fallback","staff"],"sources":["C:/Users/kasti/workspace/REACT-QUERY/base-lazy-days/client/src/components/staff/hooks/useStaff.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport type { Staff } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\nimport { filterByTreatment } from '../utils';\r\n\r\n// for when we need a query function for useQuery\r\nasync function getStaff(): Promise<Staff[]> {\r\n  const { data } = await axiosInstance.get('/staff');\r\n  return data;\r\n}\r\n\r\ninterface UseStaff {\r\n  staff: Staff[];\r\n  filter: string;\r\n  setFilter: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nexport function useStaff(): UseStaff {\r\n  // for filtering staff by treatment\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  const fallback = [];\r\n  const { staff = (data = fallback) } = useQuery(queryKeys.staff, getStaff);\r\n\r\n  return { staff, filter, setFilter };\r\n}\r\n"],"mappings":";AAAA,SAAmCA,QAAQ,QAAQ,OAAO;AAC1D,SAASC,QAAQ,QAAQ,aAAa;AAGtC,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAG1D;AACA,eAAeC,QAAQA,CAAA,EAAqB;EAC1C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,QAAQ,CAAC;EAClD,OAAOD,IAAI;AACb;AAQA,OAAO,SAASE,QAAQA,CAAA,EAAa;EAAAC,EAAA;EACnC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMW,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAEC,KAAK,GAAIP,IAAI,GAAGM;EAAU,CAAC,GAAGV,QAAQ,CAACE,SAAS,CAACS,KAAK,EAAER,QAAQ,CAAC;EAEzE,OAAO;IAAEQ,KAAK;IAAEH,MAAM;IAAEC;EAAU,CAAC;AACrC;AAACF,EAAA,CAReD,QAAQ;EAAA,QAKgBN,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}