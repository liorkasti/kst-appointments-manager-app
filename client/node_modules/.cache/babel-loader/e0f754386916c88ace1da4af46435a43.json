{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\n\n// for when we need a query function for useQuery\nasync function getTreatments() {\n  const {\n    data\n  } = await axiosInstance.get('/treatments');\n  return data;\n}\nexport function useTreatments() {\n  _s();\n  const fallback = [];\n  const {\n    data = fallback\n  } = useQuery(queryKeys.treatments, getTreatments);\n  return data;\n}\n_s(useTreatments, \"Dt1zu2A8Sa6608pid1m3JMfgG5k=\", false, function () {\n  return [useQuery];\n});\nexport function usePrefetchTreatments() {\n  _s2();\n  const queryClients = useQuery();\n  queryClients.prefetchQuery(queryKeys.treatments);\n  return data;\n}\n_s2(usePrefetchTreatments, \"xI6GtXP5WcPhz/O+QyKnxnDpYKY=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","axiosInstance","queryKeys","getTreatments","data","get","useTreatments","_s","fallback","treatments","usePrefetchTreatments","_s2","queryClients","prefetchQuery"],"sources":["C:/Users/kasti/workspace/REACT-QUERY/base-lazy-days/client/src/components/treatments/hooks/useTreatments.ts"],"sourcesContent":["import { useQuery } from 'react-query';\r\n\r\nimport type { Treatment } from '../../../../../shared/types';\r\nimport { axiosInstance } from '../../../axiosInstance';\r\nimport { queryKeys } from '../../../react-query/constants';\r\n\r\n// for when we need a query function for useQuery\r\nasync function getTreatments(): Promise<Treatment[]> {\r\n  const { data } = await axiosInstance.get('/treatments');\r\n  return data;\r\n}\r\n\r\nexport function useTreatments(): Treatment[] {\r\n  const fallback = [];\r\n  const { data = fallback } = useQuery(queryKeys.treatments, getTreatments);\r\n  return data;\r\n}\r\n\r\nexport function usePrefetchTreatments(): void[] {\r\n  const queryClients = useQuery();\r\n  queryClients.prefetchQuery(queryKeys.treatments);\r\n  return data;\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AAGtC,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;;AAE1D;AACA,eAAeC,aAAaA,CAAA,EAAyB;EACnD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,aAAa,CAAC;EACvD,OAAOD,IAAI;AACb;AAEA,OAAO,SAASE,aAAaA,CAAA,EAAgB;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAEJ,IAAI,GAAGI;EAAS,CAAC,GAAGR,QAAQ,CAACE,SAAS,CAACO,UAAU,EAAEN,aAAa,CAAC;EACzE,OAAOC,IAAI;AACb;AAACG,EAAA,CAJeD,aAAa;EAAA,QAECN,QAAQ;AAAA;AAItC,OAAO,SAASU,qBAAqBA,CAAA,EAAW;EAAAC,GAAA;EAC9C,MAAMC,YAAY,GAAGZ,QAAQ,CAAC,CAAC;EAC/BY,YAAY,CAACC,aAAa,CAACX,SAAS,CAACO,UAAU,CAAC;EAChD,OAAOL,IAAI;AACb;AAACO,GAAA,CAJeD,qBAAqB;EAAA,QACdV,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}